{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jesus Sicairos\\\\Desktop\\\\ReactJS\\\\firstproject\\\\src\\\\components\\\\crime\\\\crimeServices.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport ListGroup from './listGroup';\nimport Pagination from './pagination';\nimport { paginate } from './paginate';\nimport config from '../../config.json';\nimport httpServices from './../httpServices';\n\nclass CrimeServices extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      crimes: [],\n      crime: [],\n      categories: [],\n      elements: [],\n      selectedCategory: 'allCategories',\n      currentPage: 1,\n      pageSize: 5,\n      sortColumn: {\n        path: '',\n        order: ''\n      },\n      updated: false\n    };\n\n    this.loadCrimes = async date => {\n      const {\n        data: resp\n      } = await httpServices.post(config.pathLoad, date);\n      return resp;\n    };\n\n    this.crimeDetails = async id => {\n      const {\n        data: resp\n      } = await httpServices.get(config.pathCrimeDetails + id);\n      return resp;\n    };\n\n    this.getCrimes = async () => {\n      const {\n        data: crimes\n      } = await httpServices.get(config.pathCrimes);\n      return crimes;\n    };\n\n    this.updateCrime = async obj => {\n      const {\n        data: resp\n      } = await httpServices.put(config.updateCrime, {\n        obj\n      });\n      return resp;\n    };\n  }\n\n  async componentDidMount() {\n    const crimes = await this.getCrimes();\n    this.setState({\n      crimes\n    });\n    const cat = [];\n    crimes.map(c => {\n      cat.push(c.category_id);\n    });\n\n    const categories = _.uniq(cat);\n\n    this.setState({\n      categories\n    });\n    const elements = this.state.selectedCategory === 'allCategories' ? this.state.crimes : null;\n    this.setState({\n      elements\n    });\n  }\n\n  renderCrimes() {\n    const {\n      crimes,\n      selectedCategory,\n      sortColumn,\n      currentPage,\n      pageSize,\n      categories\n    } = this.state;\n    const elements = selectedCategory !== 'allCategories' ? this.filterCrimes(crimes, selectedCategory) : crimes;\n\n    const sorted = _.orderBy(elements, [sortColumn.path], [sortColumn.order]);\n\n    const rows = paginate(sorted, currentPage, pageSize);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      allCategories: categories,\n      selectedCategory: selectedCategory,\n      onCategoryChange: this.selectedCategoryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col m-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Showing \", rows.length, \" movies in the database.\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('id', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('category_id', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('latitude', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, \"Latitud\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('longitude', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, \"Longitude\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('street_name', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, \"Street Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, \"Outcome\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      onClick: () => this.handleSort('month', sortColumn),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, rows.map(out => /*#__PURE__*/React.createElement(\"tr\", {\n      key: out.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, out.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, out.category_id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, out.latitude), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, out.longitude), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }, out.street_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, out.outcome_status), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, out.month), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/crimeDetails/' + out.id,\n        crime: {\n          out\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    }, \"Details\")))))))), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: elements.length,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  render() {\n    const {\n      path\n    } = this.props;\n    path === '/crimes' ? this.renderCrimes() : null;\n  }\n\n}\n\nexport default CrimeServices;","map":{"version":3,"sources":["C:/Users/Jesus Sicairos/Desktop/ReactJS/firstproject/src/components/crime/crimeServices.js"],"names":["React","Component","_","ListGroup","Pagination","paginate","config","httpServices","CrimeServices","state","crimes","crime","categories","elements","selectedCategory","currentPage","pageSize","sortColumn","path","order","updated","loadCrimes","date","data","resp","post","pathLoad","crimeDetails","id","get","pathCrimeDetails","getCrimes","pathCrimes","updateCrime","obj","put","componentDidMount","setState","cat","map","c","push","category_id","uniq","renderCrimes","filterCrimes","sorted","orderBy","rows","selectedCategoryChange","length","handleSort","out","latitude","longitude","street_name","outcome_status","month","pathname","handlePageChange","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport ListGroup from './listGroup';\r\nimport Pagination from './pagination';\r\nimport { paginate } from './paginate';\r\nimport config from '../../config.json';\r\nimport httpServices from './../httpServices';\r\n\r\nclass CrimeServices extends Component {\r\n    state = {\r\n        crimes: [],\r\n        crime:[],\r\n        categories: [],\r\n        elements: [],\r\n        selectedCategory:'allCategories',\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        sortColumn: {path: '', order:''},\r\n        updated: false\r\n    }\r\n    async componentDidMount() {\r\n        const crimes = await this.getCrimes();\r\n        this.setState({crimes});\r\n\r\n         const cat = [];\r\n        \r\n        crimes.map(c => {\r\n              cat.push(c.category_id)\r\n        });\r\n        const categories = _.uniq(cat);\r\n        this.setState({ categories });\r\n\r\n        const elements = this.state.selectedCategory === 'allCategories' ?  this.state.crimes: null;\r\n        this.setState({ elements })\r\n    }\r\n    loadCrimes = async date => {\r\n        const {data: resp } = await httpServices.post(config.pathLoad,date);\r\n        return resp;\r\n    }\r\n    crimeDetails = async id =>{\r\n        const {data: resp } = await httpServices.get(config.pathCrimeDetails+id);\r\n        return resp;\r\n    }\r\n    getCrimes = async () => {\r\n        const { data:crimes } = await httpServices.get(config.pathCrimes);\r\n        return crimes;\r\n    }\r\n    updateCrime = async obj =>{\r\n        const { data:resp } = await httpServices.put(config.updateCrime, {obj});\r\n        return resp;\r\n    }\r\n    renderCrimes(){\r\n        const { crimes, selectedCategory, sortColumn, currentPage, pageSize, categories } = this.state;\r\n        const elements = selectedCategory !== 'allCategories' ? this.filterCrimes(crimes, selectedCategory) : crimes;\r\n        const sorted = _.orderBy(elements,[sortColumn.path], [sortColumn.order])\r\n        const rows = paginate(sorted, currentPage, pageSize);\r\n        return (\r\n                <div className='row'>\r\n                    <div className=\"col-3 m-2\">\r\n                        <ListGroup \r\n                            allCategories={ categories } \r\n                            selectedCategory={ selectedCategory } \r\n                            onCategoryChange={ this.selectedCategoryChange} \r\n                        />\r\n                    </div>\r\n                    <div className=\"col m-4\">\r\n                        <p>Showing {rows.length} movies in the database.</p>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('id', sortColumn)}>#</th>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('category_id', sortColumn)}>Category</th>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('latitude', sortColumn)}>Latitud</th>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('longitude', sortColumn)}>Longitude</th>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('street_name', sortColumn)}>Street Name</th>\r\n                                    <th scope=\"col\">Outcome</th>\r\n                                    <th scope=\"col\" onClick={() => this.handleSort('month', sortColumn)}>Month</th>\r\n                                    <th scope=\"col\">Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows.map(out => (\r\n                                    <tr key={out.id}>\r\n                                        <td>{out.id}</td>\r\n                                        <td>{out.category_id}</td>\r\n                                        <td>{out.latitude}</td>\r\n                                        <td>{out.longitude}</td>\r\n                                        <td>{out.street_name}</td>\r\n                                        <td>{out.outcome_status}</td>\r\n                                        <td>{out.month}</td>\r\n                                        <td>\r\n                                            <Link to={{\r\n                                                        pathname:'/crimeDetails/'+out.id,\r\n                                                        crime: {\r\n                                                            out,\r\n                                                            }\r\n                                                    }}> \r\n                                            <button className='btn btn-primary'>\r\n                                                Details\r\n                                            </button>\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Pagination \r\n                        itemsCount={elements.length} \r\n                        pageSize={pageSize} \r\n                        currentPage={currentPage} \r\n                        onPageChange={this.handlePageChange} \r\n                    />\r\n                </div>\r\n            )\r\n    }\r\n    render() { \r\n        const { path } = this.props;\r\n        path === '/crimes' ?\r\n        this.renderCrimes() :\r\n        null;\r\n    }\r\n}\r\n \r\nexport default CrimeServices;"]},"metadata":{},"sourceType":"module"}